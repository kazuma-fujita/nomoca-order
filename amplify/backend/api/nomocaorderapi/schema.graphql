type Blog @model {
  id: ID!
  name: String!
  posts: [Post] @connection(keyName: "byBlog", fields: ["id"])
}

type Post @model @key(name: "byBlog", fields: ["blogID"]) {
  id: ID!
  title: String!
  blogID: ID!
  blog: Blog @connection(fields: ["blogID"])
  comments: [Comment] @connection(keyName: "byPost", fields: ["id"])
}

type Comment @model @key(name: "byPost", fields: ["postID", "content"]) {
  id: ID!
  postID: ID!
  post: Post @connection(fields: ["postID"])
  content: String!
}

type SubscriptionOrder
  @model
  @auth(rules: [{ allow: groups, groups: ["Operators"], operations: [read] }, { allow: owner }]) {
  id: ID!
  staffID: ID!
  products: [SubscriptionOrderProduct] @connection(keyName: "bySubscriptionOrder", fields: ["id"])
  staff: Staff! @connection(fields: ["staffID"])
}

type SubscriptionOrderProduct
  @model(queries: null)
  @auth(rules: [{ allow: groups, groups: ["Operators"], operations: [read] }, { allow: owner }])
  @key(name: "bySubscriptionOrder", fields: ["subscriptionOrderID", "productID"]) {
  id: ID!
  subscriptionOrderID: ID!
  productID: ID!
  product: Product! @connection(fields: ["productID"])
}

type Product
  @model
  @auth(rules: [{ allow: groups, groups: ["Operators"] }, { allow: private, operations: [read] }])
  @key(name: "sortByViewOrder", fields: ["type", "viewOrder"], queryField: "listProductsSortedByViewOrder") {
  id: ID!
  name: String!
  type: String!
  viewOrder: Int!
  disabled: Boolean!
}

type Staff
  @model
  @auth(rules: [[{ allow: groups, groups: ["Operators"], operations: [read] }, { allow: owner }])
  @key(name: "sortByViewOrder", fields: ["type", "viewOrder"], queryField: "listStaffsSortedByViewOrder") {
  id: ID!
  name: String!
  type: String!
  viewOrder: Int!
  disabled: Boolean!
}
