enum Type {
  order
  subscriptionOrder
  product
  staff
  clinic
}

enum OrderType {
  singleOrder
  subscriptionOrder
}

enum DeliveryStatus {
  ordered
  delivered
  canceled
}

enum DeliveryType {
  regular
  express
  subscription
}

type Clinic @model @auth(rules: [{ allow: owner }, { allow: groups, groups: ["Operators"], operations: [read] }]) {
  id: ID!
  name: String!
  phoneNumber: String!
  postalCode: String!
  state: String!
  city: String!
  address: String!
  building: String
}

type Order
  @model
  @auth(
    rules: [
      { allow: owner, ownerField: "owner" }
      { allow: groups, groups: ["Operators"], operations: [read, create, update] }
    ]
  ) {
  id: ID!
  products: [OrderProduct] @hasMany(indexName: "byOrder", fields: ["id"])
  clinicID: ID!
  clinic: Clinic! @hasOne(fields: ["clinicID"])
  staffID: ID!
  staff: Staff! @hasOne(fields: ["staffID"])
  deliveryStatus: DeliveryStatus!
  deliveryType: DeliveryType!
  orderedAt: AWSDateTime!
  deliveredAt: AWSDateTime
  createdAt: AWSDateTime!
  type: Type! @index(name: "sortByCreatedAt", queryField: "listOrdersSortedByCreatedAt", sortKeyFields: ["createdAt"])
  owner: String # Operators権限者が定期便CSVを出力する時に注文履歴を作成する。Owner権限の定期便作成者が注文履歴を見れるようにSubscriptionOrderのownerをOrderのownerコピーするフィールド
}

type OrderProduct
  @model(queries: null)
  @auth(rules: [{ allow: owner }, { allow: groups, groups: ["Operators"], operations: [read] }]) {
  id: ID!
  orderID: ID! @index(name: "byOrder", sortKeyFields: ["viewOrder"])
  name: String!
  unitPrice: Int!
  quantity: Int!
  viewOrder: Int!
}

type SubscriptionOrder
  @model
  @auth(rules: [{ allow: owner }, { allow: groups, groups: ["Operators"], operations: [read] }]) {
  id: ID!
  products: [SubscriptionOrderProduct] @hasMany(indexName: "bySubscriptionOrder", fields: ["id"])
  clinicID: ID!
  clinic: Clinic! @hasOne(fields: ["clinicID"])
  staffID: ID!
  staff: Staff! @hasOne(fields: ["staffID"])
  deliveryStartYear: Int!
  deliveryStartMonth: Int!
  deliveryInterval: Int!
  createdAt: AWSDateTime!
  type: String!
    @index(name: "sortByCreatedAt", queryField: "listSubscriptionOrdersSortedByCreatedAt", sortKeyFields: ["createdAt"])
}

type SubscriptionOrderProduct
  @model(queries: null)
  @auth(rules: [{ allow: owner }, { allow: groups, groups: ["Operators"], operations: [read] }]) {
  id: ID!
  subscriptionOrderID: ID! @index(name: "bySubscriptionOrder", sortKeyFields: ["productID"])
  productID: ID!
  product: Product! @hasOne(fields: ["productID"])
  quantity: Int!
}

type Product @model @auth(rules: [{ allow: groups, groups: ["Operators"] }, { allow: private, operations: [read] }]) {
  id: ID!
  name: String!
  unitPrice: Int!
  orderType: OrderType!
  viewOrder: Int!
  isExportCSV: Boolean!
  disabled: Boolean!
  type: Type! @index(name: "sortByViewOrder", queryField: "listProductsSortedByViewOrder", sortKeyFields: ["viewOrder"])
}

type Staff @model @auth(rules: [{ allow: groups, groups: ["Operators"], operations: [read] }, { allow: owner }]) {
  id: ID!
  firstName: String!
  lastName: String!
  viewOrder: Int!
  disabled: Boolean!
  type: Type! @index(name: "sortByViewOrder", queryField: "listStaffSortedByViewOrder", sortKeyFields: ["viewOrder"])
}
