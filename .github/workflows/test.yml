name: Tests
on:
  push:
    branches:
      - develop
  pull_request:
    types: [opened, reopened]
jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      # build
      - name: Checkout
        uses: actions/checkout@v2
      - name: Export dummy build.gradle
        uses: ./.github/actions/gradle
      - name: Java Install
        # run: sudo yum install -y java-11-amazon-corretto-headless
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '11'
          cache: 'gradle'
      - name: Install modules
        run: npm ci
      # We need to AWS CLI to configure the account and profile credentials.
      # Note: The --profile {default} needs to be the same that the profileName in the init.sh
      - name: Install AWS CLI & Configuring Profile Credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID --profile default
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY --profile default
          aws configure set default.region $AWS_REGION
      # Run Amplify mock
      - name: Export dummy aws-exports.js
        uses: ./.github/actions/export
      - name: Install Amplify CLI
        run: npm install -g @aws-amplify/cli
      - name: Amplify pull
        run: amplify pull --appId ${{ secrets.AMPLIFY_APP_ID }} --envName develop -y
      - name: Amplify mocking
        run: npm run mock
      # Jest test
      - name: Run format with Prettier
        run: npm run fmt
      - name: Run lint
        run: npm run lint
      - name: Run tests ‚öóÔ∏è
        run: npm run test
        env:
          TZ: 'Asia/Tokyo'
      # Cypress e2e
      - name: Run E2E tests üß™
        uses: cypress-io/github-action@v2
        with:
          build: npm run build
          start: npm start
      # Cypress component testing
      - name: Run Component tests with Cypress üß™
        uses: cypress-io/github-action@v2
        with:
          install: false
          command: npm run cy:run:ct
      # notification
      - name: Slack notification success
        if: success()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: Github
          SLACK_ICON: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
          SLACK_TITLE: 'Tests success :rocket:'
          SLACK_COLOR: '#5cb85c'
      - name: Slack notification failure
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: Github
          SLACK_ICON: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
          SLACK_TITLE: 'Tests failure :boom:'
          SLACK_COLOR: '#dc143c'
